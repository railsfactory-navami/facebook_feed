{"version":3,"sources":["../src/Facebook.js"],"names":["Method","GET","POST","DELETE","Facebook","options","domain","version","cookie","status","xfbml","language","frictionlessRequests","debug","appId","Error","wait","init","getAppId","loadingPromise","Promise","resolve","restOptions","window","fbAsyncInit","FB","document","getElementById","js","createElement","id","async","defer","src","body","appendChild","process","method","before","after","fb","reject","response","error","code","type","message","ui","api","path","params","login","opts","logout","getLoginStatus","getAuthResponse","getTokenDetail","loginResponse","LoginStatus","CONNECTED","authResponse","getProfile","getTokenDetailWithProfile","tokenDetail","profile","getToken","accessToken","getUserId","userID","sendInvite","to","postAction","ogNamespace","ogAction","ogObject","ogObjectUrl","noFeedStory","url","encodeURIComponent","getPermissions","data","hasPermissions","permissions","usersPermissions","findedPermissions","filter","p","currentPermission","find","row","permission","length","subscribe","eventName","callback","Event","unsubscribe","parse","parentNode","XFBML","getRequests","removeRequest","requestID","setAutoGrow","Canvas","paySimple","product","quantity","action","pay"],"mappings":"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","sourcesContent":["// @flow\nimport LoginStatus from './constants/LoginStatus';\n\nexport const Method = {\n  GET: 'get',\n  POST: 'post',\n  DELETE: 'delete',\n};\n\nexport default class Facebook {\n  constructor(options = {}) {\n    this.options = {\n      domain: 'connect.facebook.net',\n      version: 'v3.2',\n      cookie: false,\n      status: false,\n      xfbml: false,\n      language: 'en_US',\n      frictionlessRequests: false,\n      debug: false,\n      ...options,\n    };\n\n    if (!this.options.appId) {\n      throw new Error('You need to set appId');\n    }\n\n    if (!this.options.wait) {\n      this.init();\n    }\n  }\n\n  getAppId(): string {\n    return this.options.appId;\n  }\n\n  async init() {\n    if (this.loadingPromise) {\n      return this.loadingPromise;\n    }\n\n    this.loadingPromise = new Promise((resolve) => {\n      const {\n        domain,\n        language,\n        debug,\n        ...restOptions\n      } = this.options;\n\n      window.fbAsyncInit = () => {\n        window.FB.init({\n          appId: restOptions.appId,\n          version: restOptions.version,\n          cookie: restOptions.cookie,\n          status: restOptions.status,\n          xfbml: restOptions.xfbml,\n          frictionlessRequests: this.frictionlessRequests,\n        });\n\n        resolve(window.FB);\n      };\n\n      if (window.document.getElementById('facebook-jssdk')) {\n        return;\n      }\n\n      const js = window.document.createElement('script');\n      js.id = 'facebook-jssdk';\n      js.async = true;\n      js.defer = true;\n      js.src = `https://${domain}/${language}/sdk${debug ? '/debug' : ''}.js`;\n\n      window.document.body.appendChild(js);\n    });\n\n    return this.loadingPromise;\n  }\n\n  async process(method, before = [], after = []) {\n    const fb = await this.init();\n\n    return new Promise((resolve, reject) => {\n      fb[method](...before, (response) => {\n        if (!response) {\n          reject(new Error('Response is undefined'));\n        } else if (response.error) {\n          const { code, type, message } = response.error;\n\n          const error = new Error(message);\n          error.code = code;\n          error.type = type;\n\n          reject(error);\n        } else {\n          resolve(response);\n        }\n      }, ...after);\n    });\n  }\n\n  async ui(options) {\n    return this.process('ui', [options]);\n  }\n\n  async api(path, method = Method.GET, params = {}) {\n    return this.process('api', [path, method, params]);\n  }\n\n  async login(opts = null) {\n    return this.process('login', [], [opts]);\n  }\n\n  async logout() {\n    return this.process('logout');\n  }\n\n  async getLoginStatus() {\n    return this.process('getLoginStatus');\n  }\n\n  async getAuthResponse() {\n    return this.process('getAuthResponse');\n  }\n\n  async getTokenDetail(loginResponse) {\n    if (loginResponse.status === LoginStatus.CONNECTED && loginResponse.authResponse) {\n      return loginResponse.authResponse;\n    }\n\n    const response = await this.getLoginStatus();\n\n    if (response.status === LoginStatus.CONNECTED && response.authResponse) {\n      return response.authResponse;\n    }\n\n    throw new Error('Token is undefined');\n  }\n\n  async getProfile(params) {\n    return this.api('/me', Method.GET, params);\n  }\n\n  async getTokenDetailWithProfile(params, response) {\n    const tokenDetail = await this.getTokenDetail(response);\n    const profile = await this.getProfile(params);\n\n    return {\n      profile,\n      tokenDetail,\n    };\n  }\n\n  async getToken() {\n    const authResponse = await this.getTokenDetail();\n    return authResponse.accessToken;\n  }\n\n  async getUserId() {\n    const authResponse = await this.getTokenDetail();\n    return authResponse.userID;\n  }\n\n  async sendInvite(to, options) {\n    return this.ui({\n      to,\n      method: 'apprequests',\n      ...options,\n    });\n  }\n\n\n  async postAction(ogNamespace, ogAction, ogObject, ogObjectUrl, noFeedStory) {\n    let url = `/me/${ogNamespace}:${ogAction}?${ogObject}=${encodeURIComponent(ogObjectUrl)}`;\n\n    if (noFeedStory === true) {\n      url += '&no_feed_story=true';\n    }\n\n    return this.api(url, Method.POST);\n  }\n\n  async getPermissions() {\n    const response = await this.api('/me/permissions');\n    return response.data;\n  }\n\n  async hasPermissions(permissions) {\n    const usersPermissions = await this.getPermissions();\n\n    const findedPermissions = permissions.filter((p) => {\n      const currentPermission = usersPermissions.find((row) => {\n        const { permission, status } = row;\n        return status === 'granted' && permission === p;\n      });\n\n      return !!currentPermission;\n    });\n\n    return findedPermissions.length === permissions.length;\n  }\n\n  async subscribe(eventName, callback) {\n    const fb = await this.init();\n    fb.Event.subscribe(eventName, callback);\n  }\n\n  async unsubscribe(eventName, callback) {\n    const fb = await this.init();\n    fb.Event.unsubscribe(eventName, callback);\n  }\n\n  async parse(parentNode) {\n    const fb = await this.init();\n\n    if (typeof parentNode === 'undefined') {\n      fb.XFBML.parse();\n    } else {\n      fb.XFBML.parse(parentNode);\n    }\n  }\n\n  async getRequests() {\n    return this.api('/me/apprequests');\n  }\n\n  async removeRequest(requestID) {\n    return this.api(requestID, Method.DELETE);\n  }\n\n  async setAutoGrow() {\n    const fb = await this.init();\n    fb.Canvas.setAutoGrow();\n  }\n\n  async paySimple(product, quantity = 1) {\n    return this.ui({\n      method: 'pay',\n      action: 'purchaseitem',\n      product,\n      quantity,\n    });\n  }\n\n  async pay(product, options) {\n    return this.ui({\n      method: 'pay',\n      action: 'purchaseitem',\n      product,\n      ...options,\n    });\n  }\n}\n\n/*\n  sendToFriends: function(options, callback) {\n    if(!options) {\n      options = {};\n    }\n\n    options.method = 'send';\n\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  sendMessage: function(message, name, caption, description, url, imgUrl, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui({\n        method: 'stream.publish',\n        message: message,\n        attachment: {\n          name: name,\n          caption: caption,\n          description: description,\n          href: url,\n          media:[{\n            type: 'image',\n            src:  imgUrl,\n            href: url\n          }]\n        },\n        action_links: [{\n          text: 'Code',\n          href: url\n        }],\n        user_prompt_message: message\n      },\n      function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  sendInviteForm: function(options, callback) {\n    if(typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      options.method = options.method || 'apprequests';\n\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  checkPageLike: function(pageID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      fbApi.getUserID(function(err, userID) {\n        if(err) {\n          return callback(err);\n        }\n\n        var fqlQuery = `SELECT uid FROM page_fan WHERE page_id = ${pageID} and uid = ${userID}`;\n        var query = FB.Data.query(fqlQuery);\n\n        query.wait(function(rows) {\n          if (rows.length === 1 && rows[0].uid === userID) {\n            callback(null, true, query);\n          }\n          else {\n            callback(null, false, query);\n          }\n        });\n      });\n    });\n  },\n\n  sendMessageToFriend: function (friendID, link, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui({\n        to: friendID,\n        method: 'send',\n        link: link\n      }, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  _prepareUsers: function(data) {\n    var users=[];\n\n    for(var index in data) {\n      var userData=data[index];\n\n      var user = {\n        provider_uid: 'facebook'+'_'+userData.uid,\n        provider: 'facebook',\n        id: userData.uid,\n        name: userData.name,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        status: (userData.status!==null) ? userData.status : null,\n        image: '//graph.facebook.com/'+userData.uid+'/picture?'\n      };\n\n      users.push(user);\n    }\n\n    return users;\n  },\n\n  getUserList: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('fql', {\n        q: `\n          SELECT uid, name, first_name, last_name, online_presence, status\n          FROM user\n          WHERE uid IN\n            ( SELECT uid2 FROM friend WHERE uid1 = me()) ORDER BY name\n        `,\n      }, function (response)\n      {\n        var users = fbApi._prepareUsers(response.data);\n        callback(null, users, response);\n      });\n    });\n  },\n\n  postFeed: function(options, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      options.method='feed';\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //need publish_stream\n  createAlbum: function(name, description, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/albums', 'post', {\n        name: name,\n        description: description\n      },function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //need publish_stream\n  addImageToAlbum: function(albumID, imageURL, message, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/photos', 'post', {\n        message: message,\n        url: imageURL\n      }, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbums: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/albums', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbumPhotos: function(albumID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/photos', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbumCoverPicture: function(albumID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/picture', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'publish_stream'\n  postPhoto: function(photoUrl, message, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/photos', 'post', {\n        message: message,\n        url: photoUrl\n      },function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  getPageInfo: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.Canvas.getPageInfo(function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  }\n*/\n"],"file":"Facebook.js"}