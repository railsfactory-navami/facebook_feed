{"version":3,"sources":["../src/FacebookProvider.jsx"],"names":["api","Facebook","Component","isReady","canUseDOM","Error","state","domain","version","appId","cookie","status","xfbml","language","frictionlessRequests","wait","debug","props","FB","init","setState","componentDidMount","handleInit","render","children","error","value","undefined"],"mappings":";;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAIA,GAAG,GAAG,IAAV;;AAoBe,MAAMC,QAAN,SAAuBC,gBAAvB,CAA+C;AAAA;AAAA;;AAAA;AAAA;AAAA,iDAc7C;AACbC,MAAAA,OAAO,EAAE;AADI,KAd6C;AAAA;AAAA;AAAA,oCAyB/C,aAAyB;AACpC;AACA,UAAI,CAACC,kBAAL,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACD;;AAED,YAAM;AAAEF,QAAAA;AAAF,UAAc,KAAI,CAACG,KAAzB;;AACA,UAAIH,OAAJ,EAAa;AACX,eAAOH,GAAP;AACD;;AAED,UAAI,CAACA,GAAL,EAAU;AACR,cAAM;AACJO,UAAAA,MADI;AAEJC,UAAAA,OAFI;AAGJC,UAAAA,KAHI;AAIJC,UAAAA,MAJI;AAKJC,UAAAA,MALI;AAMJC,UAAAA,KANI;AAOJC,UAAAA,QAPI;AAQJC,UAAAA,oBARI;AASJC,UAAAA,IATI;AAUJC,UAAAA;AAVI,YAWF,KAAI,CAACC,KAXT;AAaAjB,QAAAA,GAAG,GAAG,IAAIkB,iBAAJ,CAAO;AACXX,UAAAA,MADW;AAEXE,UAAAA,KAFW;AAGXD,UAAAA,OAHW;AAIXE,UAAAA,MAJW;AAKXC,UAAAA,MALW;AAMXC,UAAAA,KANW;AAOXC,UAAAA,QAPW;AAQXC,UAAAA,oBARW;AASXC,UAAAA,IATW;AAUXC,UAAAA;AAVW,SAAP,CAAN;AAYD;;AAED,YAAMhB,GAAG,CAACmB,IAAJ,EAAN;;AAEA,UAAI,CAAC,KAAI,CAACb,KAAL,CAAWH,OAAhB,EAAyB;AACvB,QAAA,KAAI,CAACiB,QAAL,CAAc;AACZjB,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD;;AAED,aAAOH,GAAP;AACD,KAzE2D;AAAA;;AAkB5DqB,EAAAA,iBAAiB,GAAS;AACxB,UAAM;AAAEN,MAAAA;AAAF,QAAW,KAAKE,KAAtB;;AACA,QAAI,CAACF,IAAL,EAAW;AACT,WAAKO,UAAL;AACD;AACF;;AAoDDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKP,KAA1B;AACA,UAAM;AAAEd,MAAAA,OAAF;AAAWsB,MAAAA;AAAX,QAAqB,KAAKnB,KAAhC;AACA,UAAM;AAAEgB,MAAAA;AAAF,QAAiB,IAAvB;AAEA,UAAMI,KAAK,GAAG;AACZvB,MAAAA,OADY;AAEZsB,MAAAA,KAFY;AAGZH,MAAAA,UAHY;AAIZtB,MAAAA;AAJY,KAAd;AAOA,WACE,6BAAC,wBAAD,CAAiB,QAAjB;AAA0B,MAAA,KAAK,EAAE0B;AAAjC,OACGF,QADH,CADF;AAKD;;AA5F2D;;;8BAAzCvB,Q,kBACG;AACpBO,EAAAA,OAAO,EAAE,MADW;AAEpBE,EAAAA,MAAM,EAAE,KAFY;AAGpBC,EAAAA,MAAM,EAAE,KAHY;AAIpBC,EAAAA,KAAK,EAAE,KAJa;AAKpBC,EAAAA,QAAQ,EAAE,OALU;AAMpBC,EAAAA,oBAAoB,EAAE,KANF;AAOpBP,EAAAA,MAAM,EAAE,sBAPY;AAQpBiB,EAAAA,QAAQ,EAAEG,SARU;AASpBZ,EAAAA,IAAI,EAAE,KATc;AAUpBC,EAAAA,KAAK,EAAE;AAVa,C","sourcesContent":["// @flow\nimport React, { Component, type Node } from 'react';\nimport canUseDOM from 'can-use-dom';\nimport FB from './Facebook';\nimport FacebookContext from './FacebookContext';\n\nlet api = null;\n\ntype Props = {\n  appId: string,\n  domain?: string,\n  version?: string,\n  cookie?: boolean,\n  status?: boolean,\n  xfbml?: boolean,\n  language?: string,\n  frictionlessRequests?: boolean,\n  children?: Node,\n  wait?: boolean,\n  debug: boolean,\n};\n\ntype State = {\n  isReady: boolean,\n};\n\nexport default class Facebook extends Component<Props, State> {\n  static defaultProps = {\n    version: 'v3.1',\n    cookie: false,\n    status: false,\n    xfbml: false,\n    language: 'en_US',\n    frictionlessRequests: false,\n    domain: 'connect.facebook.net',\n    children: undefined,\n    wait: false,\n    debug: false,\n  };\n\n  state: State = {\n    isReady: false,\n  };\n\n  componentDidMount(): void {\n    const { wait } = this.props;\n    if (!wait) {\n      this.handleInit();\n    }\n  }\n\n  handleInit = async (): Promise<FB> => {\n    // do not run if SSR\n    if (!canUseDOM) {\n      throw new Error('You can not use Facebook without DOM');\n    }\n\n    const { isReady } = this.state;\n    if (isReady) {\n      return api;\n    }\n\n    if (!api) {\n      const {\n        domain,\n        version,\n        appId,\n        cookie,\n        status,\n        xfbml,\n        language,\n        frictionlessRequests,\n        wait,\n        debug,\n      } = this.props;\n\n      api = new FB({\n        domain,\n        appId,\n        version,\n        cookie,\n        status,\n        xfbml,\n        language,\n        frictionlessRequests,\n        wait,\n        debug,\n      });\n    }\n\n    await api.init();\n\n    if (!this.state.isReady) {\n      this.setState({\n        isReady: true,\n      });\n    }\n\n    return api;\n  }\n\n  render() {\n    const { children } = this.props;\n    const { isReady, error } = this.state;\n    const { handleInit } = this;\n\n    const value = {\n      isReady,\n      error,\n      handleInit,\n      api,\n    };\n\n    return (\n      <FacebookContext.Provider value={value}>\n        {children}\n      </FacebookContext.Provider>\n    );\n  }\n}\n"],"file":"FacebookProvider.js"}