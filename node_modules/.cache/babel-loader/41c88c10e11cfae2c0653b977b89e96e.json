{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.version = exports.FacebookApiException = exports.Facebook = exports.FB = undefined;\n\nvar _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');\n\nvar _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _symbol = require('babel-runtime/core-js/symbol');\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _create = require('babel-runtime/core-js/object/create');\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _desc, _value, _class;\n\nvar _anyPromise = require('any-promise');\n\nvar _anyPromise2 = _interopRequireDefault(_anyPromise);\n\nvar _coreDecorators = require('core-decorators');\n\nvar _debug = require('debug');\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _request = require('request');\n\nvar _request2 = _interopRequireDefault(_request);\n\nvar _url = require('url');\n\nvar _url2 = _interopRequireDefault(_url);\n\nvar _querystring = require('querystring');\n\nvar _querystring2 = _interopRequireDefault(_querystring);\n\nvar _crypto = require('crypto');\n\nvar _crypto2 = _interopRequireDefault(_crypto);\n\nvar _FacebookApiException = require('./FacebookApiException');\n\nvar _FacebookApiException2 = _interopRequireDefault(_FacebookApiException);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nvar _require = require('../package.json'),\n    version = _require.version,\n    debugReq = (0, _debug2.default)('fb:req'),\n    debugSig = (0, _debug2.default)('fb:sig'),\n    METHODS = ['get', 'post', 'delete', 'put'],\n    toString = Object.prototype.toString,\n    has = Object.prototype.hasOwnProperty,\n    log = function log(d) {\n  // todo\n  console.log(d); // eslint-disable-line no-console\n},\n    defaultOptions = (0, _assign2.default)((0, _create2.default)(null), {\n  Promise: _anyPromise2.default,\n  accessToken: null,\n  appId: null,\n  appSecret: null,\n  appSecretProof: null,\n  beta: false,\n  version: 'v2.3',\n  timeout: null,\n  scope: null,\n  redirectUri: null,\n  proxy: null,\n  userAgent: \"thuzi_nodejssdk/\".concat(version)\n}),\n    isValidOption = function isValidOption(key) {\n  return has.call(defaultOptions, key);\n},\n    stringifyParams = function stringifyParams(params) {\n  var data = {};\n\n  for (var key in params) {\n    var value = params[key];\n\n    if (value && typeof value !== 'string') {\n      value = (0, _stringify2.default)(value);\n    }\n\n    if (value !== undefined) {\n      data[key] = value;\n    }\n  }\n\n  return _querystring2.default.stringify(data);\n},\n    postParamData = function postParamData(params) {\n  var data = {},\n      isFormData = false;\n\n  for (var key in params) {\n    var value = params[key];\n\n    if (value && typeof value !== 'string') {\n      var _context;\n\n      var val = typeof value === 'object' && (_context = value, has).call(_context, 'value') && (_context = value, has).call(_context, 'options') ? value.value : value;\n\n      if (Buffer.isBuffer(val)) {\n        isFormData = true;\n      } else if (typeof val.read === 'function' && typeof val.pipe === 'function' && val.readable) {\n        isFormData = true;\n      } else {\n        value = (0, _stringify2.default)(value);\n      }\n    }\n\n    if (value !== undefined) {\n      data[key] = value;\n    }\n  }\n\n  return {\n    [isFormData ? 'formData' : 'form']: data\n  };\n},\n    getAppSecretProof = function getAppSecretProof(accessToken, appSecret) {\n  var hmac = _crypto2.default.createHmac('sha256', appSecret);\n\n  hmac.update(accessToken);\n  return hmac.digest('hex');\n},\n    base64UrlDecode = function base64UrlDecode(str) {\n  var base64String = str.replace(/\\-/g, '+').replace(/_/g, '/');\n  var buffer = new Buffer(base64String, 'base64');\n  return buffer.toString('utf8');\n},\n    nodeifyCallback = function nodeifyCallback(originalCallback) {\n  // normalizes the callback parameters so that the\n  // first parameter is always error and second is response\n  return function (res) {\n    if (!res || res.error) {\n      originalCallback(new _FacebookApiException2.default(res));\n    } else {\n      originalCallback(null, res);\n    }\n  };\n};\n\nvar _opts = (0, _symbol2.default)('opts');\n\nvar graph = (0, _symbol2.default)('graph');\nvar oauthRequest = (0, _symbol2.default)('oauthRequest');\nvar Facebook = (_class = function () {\n  function Facebook(opts, _internalInherit) {\n    (0, _classCallCheck3.default)(this, Facebook);\n\n    if (_internalInherit instanceof Facebook) {\n      this[_opts] = (0, _create2.default)(_internalInherit[_opts]);\n    } else {\n      this[_opts] = (0, _create2.default)(defaultOptions);\n    }\n\n    if (typeof opts === 'object') {\n      this.options(opts);\n    }\n  }\n  /**\n   *\n   * @access public\n   * @param path {String} the url path\n   * @param method {String} the http method (default: `\"GET\"`)\n   * @param params {Object} the parameters for the query\n   * @param cb {Function} the callback function to handle the response\n   * @return {Promise|undefined}\n   */\n\n\n  (0, _createClass3.default)(Facebook, [{\n    key: 'api',\n    value: function api() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      } //\n      // FB.api('/platform', function(response) {\n      //  console.log(response.company_overview);\n      // });\n      //\n      // FB.api('/platform/posts', { limit: 3 }, function(response) {\n      // });\n      //\n      // FB.api('/me/feed', 'post', { message: body }, function(response) {\n      //  if(!response || response.error) {\n      //      console.log('Error occured');\n      //  } else {\n      //      console.log('Post ID:' + response.id);\n      //  }\n      // });\n      //\n      // var postId = '1234567890';\n      // FB.api(postId, 'delete', function(response) {\n      //  if(!response || response.error) {\n      //      console.log('Error occurred');\n      //  } else {\n      //      console.log('Post was deleted');\n      //  }\n      // });\n      //\n      //\n\n\n      var ret = void 0;\n\n      if (args.length > 0 && typeof args[args.length - 1] !== 'function') {\n        var _Promise = this.options('Promise');\n\n        ret = new _Promise(function (resolve, reject) {\n          args.push(function (res) {\n            if (!res || res.error) {\n              reject(new _FacebookApiException2.default(res));\n            } else {\n              resolve(res);\n            }\n          });\n        });\n      }\n\n      this[graph].apply(this, args);\n      return ret;\n    }\n    /**\n     *\n     * @access public\n     * @param path {String} the url path\n     * @param method {String} the http method (default: `\"GET\"`)\n     * @param params {Object} the parameters for the query\n     * @param cb {Function} the callback function to handle the error and response\n     */\n    // this method does not exist in fb js sdk\n\n  }, {\n    key: 'napi',\n    value: function napi() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      } //\n      // normalizes to node style callback so can use the sdk with async control flow node libraries\n      //  first parameters:          error (always type of FacebookApiException)\n      //  second callback parameter: response\n      //\n      // FB.napi('/platform', function(err, response) {\n      //  console.log(response.company_overview);\n      // });\n      //\n      // FB.napi('/platform/posts', { limit: 3 }, function(err, response) {\n      // });\n      //\n      // FB.napi('/me/feed', 'post', { message: body }, function(error, response) {\n      //  if(error) {\n      //      console.log('Error occured');\n      //  } else {\n      //      console.log('Post ID:' + response.id);\n      //  }\n      // });\n      //\n      // var postId = '1234567890';\n      // FB.napi(postId, 'delete', function(error, response) {\n      //  if(error) {\n      //      console.log('Error occurred');\n      //  } else {\n      //      console.log('Post was deleted');\n      //  }\n      // });\n      //\n      //\n\n\n      if (args.length > 0) {\n        var originalCallback = args.pop();\n        args.push(typeof originalCallback === 'function' ? nodeifyCallback(originalCallback) : originalCallback);\n      }\n\n      this.api.apply(this, args);\n    }\n    /**\n     *\n     * Make a api call to Graph server.\n     *\n     * Except the path, all arguments to this function are optiona. So any of\n     * these are valid:\n     *\n     *  FB.api('/me') // throw away the response\n     *  FB.api('/me', function(r) { console.log(r) })\n     *  FB.api('/me', { fields: 'email' }); // throw away response\n     *  FB.api('/me', { fields: 'email' }, function(r) { console.log(r) });\n     *  FB.api('/123456789', 'delete', function(r) { console.log(r) } );\n     *  FB.api(\n     *      '/me/feed',\n     *      'post',\n     *      { body: 'hi there' },\n     *      function(r) { console.log(r) }\n     *  );\n     *\n     */\n\n  }, {\n    key: graph,\n    value: function value(path, next) {\n      var method, params, cb;\n\n      if (typeof path !== 'string') {\n        throw new Error(\"Path is of type \".concat(typeof path, \", not string\"));\n      }\n\n      for (var _len3 = arguments.length, args = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n        args[_key3 - 2] = arguments[_key3];\n      }\n\n      while (next) {\n        var type = typeof next;\n\n        if (type === 'string' && !method) {\n          method = next.toLowerCase();\n        } else if (type === 'function' && !cb) {\n          cb = next;\n        } else if (type === 'object' && !params) {\n          params = next;\n        } else {\n          log('Invalid argument passed to FB.api(): ' + next);\n          return;\n        }\n\n        next = args.shift();\n      }\n\n      method = method || 'get';\n      params = params || {}; // remove prefix slash if one is given, as it's already in the base url\n\n      if (path[0] === '/') {\n        path = path.substr(1);\n      }\n\n      if (METHODS.indexOf(method) < 0) {\n        log('Invalid method passed to FB.api(): ' + method);\n        return;\n      }\n\n      this[oauthRequest](path, method, params, cb);\n    }\n    /**\n     * Add the oauth parameter, and fire of a request.\n     *\n     * @access private\n     * @param path {String}     the request path\n     * @param method {String}   the http method\n     * @param params {Object}   the parameters for the query\n     * @param cb {Function}     the callback function to handle the response\n     */\n\n  }, {\n    key: oauthRequest,\n    value: function value(path, method, params, cb) {\n      var uri, parsedUri, parsedQuery, formOptions, requestOptions, pool;\n\n      cb = cb || function () {};\n\n      if (!params.access_token) {\n        if (this.options('accessToken')) {\n          params.access_token = this.options('accessToken');\n\n          if (this.options('appSecret')) {\n            params.appsecret_proof = this.options('appSecretProof');\n          }\n        }\n      } else if (!params.appsecret_proof && this.options('appSecret')) {\n        params.appsecret_proof = getAppSecretProof(params.access_token, this.options('appSecret'));\n      }\n\n      if (!/^v\\d+\\.\\d+\\//.test(path)) {\n        path = this.options('version') + '/' + path;\n      }\n\n      uri = \"https://graph.\".concat(this.options('beta') ? 'beta.' : '', \"facebook.com/\").concat(path);\n      parsedUri = _url2.default.parse(uri);\n      delete parsedUri.search;\n      parsedQuery = _querystring2.default.parse(parsedUri.query);\n\n      if (method === 'post') {\n        if (params.access_token) {\n          parsedQuery.access_token = params.access_token;\n          delete params.access_token;\n\n          if (params.appsecret_proof) {\n            parsedQuery.appsecret_proof = params.appsecret_proof;\n            delete params.appsecret_proof;\n          }\n        }\n\n        formOptions = postParamData(params);\n      } else {\n        for (var key in params) {\n          parsedQuery[key] = params[key];\n        }\n      }\n\n      parsedUri.search = stringifyParams(parsedQuery);\n      uri = _url2.default.format(parsedUri);\n      pool = {\n        maxSockets: this.options('maxSockets') || Number(process.env.MAX_SOCKETS) || 5\n      };\n      requestOptions = (0, _extends3.default)({\n        method,\n        uri\n      }, formOptions, {\n        pool\n      });\n\n      if (this.options('proxy')) {\n        requestOptions['proxy'] = this.options('proxy');\n      }\n\n      if (this.options('timeout')) {\n        requestOptions['timeout'] = this.options('timeout');\n      }\n\n      if (this.options('userAgent')) {\n        requestOptions['headers'] = {\n          'User-Agent': this.options('userAgent')\n        };\n      }\n\n      debugReq(method.toUpperCase() + ' ' + uri);\n      (0, _request2.default)(requestOptions, function (error, response, body) {\n        if (error !== null) {\n          if (error === Object(error) && has.call(error, 'error')) {\n            return cb(error);\n          }\n\n          return cb({\n            error\n          });\n        }\n\n        var json = void 0;\n\n        try {\n          json = JSON.parse(body);\n        } catch (ex) {\n          // sometimes FB is has API errors that return HTML and a message\n          // of \"Sorry, something went wrong\". These are infrequent and unpredictable but\n          // let's not let them blow up our application.\n          json = {\n            error: {\n              code: 'JSONPARSE',\n              Error: ex\n            }\n          };\n        }\n\n        cb(json);\n      });\n    }\n    /**\n     *\n     * @access public\n     * @param signedRequest {String} the signed request value\n     * @param appSecret {String} the application secret\n     * @return {Object} the parsed signed request or undefined if failed\n     *\n     * throws error if appSecret is not defined\n     *\n     * FB.parseSignedRequest('signedRequest', 'appSecret')\n     * FB.parseSignedRequest('signedRequest') // will use appSecret from options('appSecret')\n     *\n     */\n\n  }, {\n    key: 'parseSignedRequest',\n    value: function parseSignedRequest(signedRequest) {\n      var _context2;\n\n      for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        args[_key4 - 1] = arguments[_key4];\n      } // this method does not exist in fb js sdk\n\n\n      var appSecret = args.shift() || this.options('appSecret'),\n          split,\n          encodedSignature,\n          encodedEnvelope,\n          envelope,\n          hmac,\n          base64Digest,\n          base64UrlDigest;\n\n      if (!signedRequest) {\n        debugSig('invalid signedRequest');\n        return;\n      }\n\n      if (!appSecret) {\n        throw new Error('appSecret required');\n      }\n\n      split = signedRequest.split('.');\n\n      if (split.length !== 2) {\n        debugSig('invalid signedRequest');\n        return;\n      }\n\n      var _split = split;\n\n      var _split2 = (0, _slicedToArray3.default)(_split, 2);\n\n      encodedSignature = _split2[0];\n      encodedEnvelope = _split2[1];\n\n      if (!encodedSignature || !encodedEnvelope) {\n        debugSig('invalid signedRequest');\n        return;\n      }\n\n      try {\n        envelope = JSON.parse(base64UrlDecode(encodedEnvelope));\n      } catch (ex) {\n        debugSig('encodedEnvelope is not a valid base64 encoded JSON');\n        return;\n      }\n\n      if (!(envelope && (_context2 = envelope, has).call(_context2, 'algorithm') && envelope.algorithm.toUpperCase() === 'HMAC-SHA256')) {\n        debugSig(envelope.algorithm + ' is not a supported algorithm, must be one of [HMAC-SHA256]');\n        return;\n      }\n\n      hmac = _crypto2.default.createHmac('sha256', appSecret);\n      hmac.update(encodedEnvelope);\n      base64Digest = hmac.digest('base64'); // remove Base64 padding\n\n      base64UrlDigest = base64Digest.replace(/={1,3}$/, ''); // Replace illegal characters\n\n      base64UrlDigest = base64UrlDigest.replace(/\\+/g, '-').replace(/\\//g, '_');\n\n      if (base64UrlDigest !== encodedSignature) {\n        debugSig('invalid signature');\n        return;\n      }\n\n      return envelope;\n    }\n    /**\n     *\n     * @access public\n     * @param opt {Object} the parameters for appId and scope\n     */\n\n  }, {\n    key: 'getLoginUrl',\n    value: function getLoginUrl() {\n      var opt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // this method does not exist in fb js sdk\n\n      var clientId = opt.appId || opt.client_id || this.options('appId'),\n          redirectUri = opt.redirectUri || opt.redirect_uri || this.options('redirectUri') || 'https://www.facebook.com/connect/login_success.html',\n          scope = opt.scope || this.options('scope'),\n          display = opt.display,\n          state = opt.state,\n          scopeQuery = '',\n          displayQuery = '',\n          stateQuery = '';\n\n      if (!clientId) {\n        throw new Error('client_id required');\n      }\n\n      if (scope) {\n        scopeQuery = '&scope=' + encodeURIComponent(scope);\n      }\n\n      if (display) {\n        displayQuery = '&display=' + display;\n      }\n\n      if (state) {\n        stateQuery = '&state=' + state;\n      }\n\n      return \"https://www.facebook.com/\".concat(this.options('version'), \"/dialog/oauth\") + '?response_type=' + (opt.responseType || opt.response_type || 'code') + scopeQuery + displayQuery + stateQuery + '&redirect_uri=' + encodeURIComponent(redirectUri) + '&client_id=' + clientId;\n    }\n  }, {\n    key: 'options',\n    value: function options(keyOrOptions) {\n      // this method does not exist in the fb js sdk\n      var o = this[_opts];\n\n      if (!keyOrOptions) {\n        return o;\n      }\n\n      if (toString.call(keyOrOptions) === '[object String]') {\n        return isValidOption(keyOrOptions) && keyOrOptions in o ? o[keyOrOptions] : null;\n      }\n\n      for (var key in o) {\n        if (isValidOption(key) && key in o && has.call(keyOrOptions, key)) {\n          o[key] = keyOrOptions[key];\n\n          switch (key) {\n            case 'appSecret':\n            case 'accessToken':\n              o.appSecretProof = o.appSecret && o.accessToken ? getAppSecretProof(o.accessToken, o.appSecret) : null;\n              break;\n          }\n        }\n      }\n    }\n    /**\n     * Return a new instance of Facebook with a different set of options\n     * that inherit unset options from the current instance.\n     * @access public\n     * @param {Object} [opts] Options to set\n     */\n\n  }, {\n    key: 'extend',\n    value: function extend(opts) {\n      return new Facebook(opts, this);\n    }\n  }, {\n    key: 'getAccessToken',\n    value: function getAccessToken() {\n      return this.options('accessToken');\n    }\n  }, {\n    key: 'setAccessToken',\n    value: function setAccessToken(accessToken) {\n      // this method does not exist in fb js sdk\n      this.options({\n        accessToken\n      });\n    }\n  }, {\n    key: 'withAccessToken',\n    value: function withAccessToken(accessToken) {\n      return this.extend({\n        accessToken\n      });\n    }\n  }]);\n  return Facebook;\n}(), (_applyDecoratedDescriptor(_class.prototype, 'api', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'api'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'napi', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'napi'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'parseSignedRequest', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'parseSignedRequest'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'getLoginUrl', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'getLoginUrl'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'options', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'options'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'extend', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'extend'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'getAccessToken', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'getAccessToken'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'setAccessToken', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'setAccessToken'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'withAccessToken', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'withAccessToken'), _class.prototype)), _class);\nvar FB = exports.FB = new Facebook();\nexports.default = FB;\nexports.Facebook = Facebook;\nexports.FacebookApiException = _FacebookApiException2.default;\nexports.version = version;","map":null,"metadata":{},"sourceType":"script"}